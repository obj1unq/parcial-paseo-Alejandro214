import paseo.*

//NO pude terminar los test 
describe "test de una familia que NO pasea" {


	var mediaIzquierda = new PrendaPar(talle = s, desgaste = 1, nivelDeAbrigo =0,numeroPar= 1 ) 
	
	var mediaDerecha = new PrendaPar(talle = s, desgaste = 3, nivelDeAbrigo = 0,numeroPar =2)
	
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
    var mediasZoe = new PrendaPares(pares = #{mediaIzquierda,mediaDerecha}, talle = s, nivelDeAbrigo = 0,desgaste= 4) 
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var zapatillaIzquierda = new PrendaPar(talle = xl, desgaste = 0, nivelDeAbrigo = 1,numeroPar=1 )
	var zapatillaDerecha = new PrendaPar(talle = xl, desgaste = 0, nivelDeAbrigo = 1,numeroPar=2)
	
	var zapatillasZoe = new PrendaPares(pares = #{zapatillaIzquierda,zapatillaDerecha}, talle = s, desgaste = 0, nivelDeAbrigo = 2) 
	
	//prenda pesada con 5 de abrigo
	var jeanZoe = new PrendaPesada(talle = xl, desgaste = 0, nivelDeAbrigo = 5) 
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new PrendaLiviana(talle = m, desgaste = 0, nivelDeAbrigo = 2) 
	// prenda pesada con desgaste default: 0
	
	var camperaZoe = new PrendaPesada(talle = l, desgaste = 0, nivelDeAbrigo = 5) 

	//un juguete para ni침os de 5 a 100 anios
	var ukelele = new Juguete(edadMinimaRecomendada=5, edadMaximaRecomendada=100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new PrendaLiviana(talle=xs, desgaste=5,nivelDeAbrigo= 0) //prenda liviana
	//prenda liviana con desgaste default: 0
	var calzaMilena = new PrendaLiviana(talle=xs,desgaste=0,nivelDeAbrigo= 0) //prenda liviana

	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
    var ojotaIzquierda = new PrendaPar(talle = s, desgaste = 1, nivelDeAbrigo = 2,numeroPar=1) 
    var ojotaDerecha = new PrendaPar(talle = s, desgaste = 1, nivelDeAbrigo = 2,numeroPar=2) 
    var ojotasMilena = new PrendaPares(pares = #{ojotaIzquierda,ojotaDerecha}, talle = s, desgaste = 1, nivelDeAbrigo = 4)
	
	//ninio
	var zoe = new Ninio( comodidad = 10,edad=11, prendas=#{mediasZoe, zapatillasZoe, jeanZoe, remeraZoe, camperaZoe }) 
	//ninio problematico
	var milena = new NinioProblematico(comodidad = 10,edad=2, prendas = #{remeraMilena, calzaMilena, ojotasMilena }, juguete= ukelele)
	
	//familia	
	var familiaAptaSalir = new Familia(ninios = #{ zoe})

	//familia	
	var familiaNoAptaParaSalir= new Familia(ninios = #{milena, zoe})
	
	

test "comodidad" {
	
	    assert.equals(6 ,mediasZoe.nivelDeComodidaParaUnNinio(zoe))
		assert.equals(8 ,zapatillasZoe.nivelDeComodidaParaUnNinio(zoe))
		assert.equals(8 ,jeanZoe.nivelDeComodidaParaUnNinio(zoe))
	    assert.equals(10 ,remeraZoe.nivelDeComodidaParaUnNinio(zoe))
	    assert.equals(8 ,camperaZoe.nivelDeComodidaParaUnNinio(zoe))
	    assert.equals(7 , remeraMilena.nivelDeComodidaParaUnNinio(zoe))		
	    assert.equals(10 , calzaMilena.nivelDeComodidaParaUnNinio(zoe))
	    assert.equals(-3 , ojotasMilena.nivelDeComodidaParaUnNinio(zoe))
	    	}

//PUNTO 2		
	test "intercambiar pares ok" {
		var mediaIzq = mediasZoe.izquierdo()
		var mediaDer = mediasZoe.derecho()
		var zapaIzq = zapatillasZoe.izquierdo()
		var zapaDer = zapatillasZoe.derecho()
		mediasZoe.intercambiarPares(zapatillasZoe)
		assert.equals(mediaIzq, mediasZoe.izquierdo())
		assert.equals(mediaDer, zapatillasZoe.derecho())
		assert.equals(zapaIzq, zapatillasZoe.izquierdo())
		assert.equals(zapaDer, mediasZoe.derecho())
				
	}
	
	test "intercambiar pares no ok" {
		//Que sucede si intercambio un par de talles distinto?
		//probar el cambio entre las ojotas de milena y las medias de zoe
		//El test est치 incompleto!
		//TODO: chequear por error!
		ojotasMilena.intercambiarPares(mediasZoe)
	}

//PUNTO 3	
test "nivel de abrigo" {
	assert.equals(2 ,mediasZoe.nivelDeAbrigo())
	assert.equals(2 ,  zapatillasZoe.nivelDeAbrigo())
	assert.equals(5 ,  jeanZoe.nivelDeAbrigo())
	assert.equals(1 ,  remeraZoe.nivelDeAbrigo())
	assert.equals(3 ,  camperaZoe.nivelDeAbrigo())
	assert.equals(1 , remeraMilena.nivelDeAbrigo())		
	assert.equals(1 , calzaMilena.nivelDeAbrigo())
	assert.equals(5 , ojotasMilena.nivelDeAbrigo())
	}

//PUNTO 4		
	test "puede salir de paseo" {
		assert.that(familiaAptaSalir.puedeSalirDePaseo())
		assert.notThat(familiaNoAptaParaSalir.puedeSalirDePaseo())
	}
//PUNTO 5
	
	test "infaltables" {
		assert.equals(#{jeanZoe,calzaMilena},familiaNoAptaParaSalir.prendasInfaltables())		
	}
	test "chiquitos" {
		assert.equals(#{milena}, familiaNoAptaParaSalir.niniosChiquitos()
		)		
	}
	
//PUNTO 6	
test "salir de paseo ok" {
		familiaAptaSalir.pasear()
		assert.equals(1.8,mediaIzquierda.nivelDeDesgaste())
		assert.equals(4.2,mediaDerecha.nivelDeDesgaste())
		assert.equals(3,mediasZoe.nivelDeDesgaste())
		assert.equals(1,zapatillasZoe.nivelDeDesgaste())
		assert.equals(1,jeanZoe.nivelDeDesgaste())
		assert.equals(1,remeraZoe.nivelDeDesgaste())
		assert.equals(1 ,camperaZoe.nivelDeDesgaste())
		
	}
//PUNTO 7	
	test "salir de paseo no ok" {
		//Que sucede si le pido pasear a una familia que no est치 lista?
		//El test est치 incompleto!
		familiaNoAptaParaSalir.pasear()
	}
	
	

}
	
	



